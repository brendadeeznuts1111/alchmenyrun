#!/usr/bin/env bash
# Deploy only the github-webhook worker to clean stage

set -euo pipefail

echo "🚀 DEPLOYING GITHUB-WEBHOOK WORKER ONLY"
echo "======================================="
echo ""

# Set environment variables
export CLOUDFLARE_API_TOKEN=WE66D-oXqNm2kbpSi3SgQdXmXNpphUbZMulvYvrO
export STAGE="micro-rfc-005-clean"
export PROFILE="ci"
export TELEGRAM_TOPIC_MOBILE="25781"
export TELEGRAM_TOPIC_FORUM="25782"

echo "📋 Configuration:"
echo "   Stage: $STAGE"
echo "   Profile: $PROFILE"
echo "   Token: ${CLOUDFLARE_API_TOKEN:0:10}..."
echo ""

echo "🏗️ Deploying github-webhook worker to clean stage..."

# Create a minimal alchemy.run.ts for worker-only deployment
cat > alchemy-worker-only.ts << 'EOF'
/// <reference types="node" />
import alchemy from "alchemy";
import { Worker } from "alchemy/cloudflare";
import { DurableObject } from "./packages/@alch/blocks/src/durable";
import { GithubAgent } from "./src/do/github-agent";

const app = alchemy({
  name: "cloudflare-demo",
  stage: process.env.STAGE || "micro-rfc-005-clean",
  profile: process.env.PROFILE || "ci",
});

// MICRO-RFC-005: DO-Backed GitHub Webhooks
// ========================================
const ghAgentDO = await DurableObject("GithubAgent", { class: GithubAgent });

await Worker("github-webhook", {
  entrypoint: "./workers/github-webhook/index.ts",
  bindings: {
    GITHUB_DO: ghAgentDO,
    TG_TOKEN: alchemy.secret(process.env.TG_TOKEN || ""),
    COUNCIL_ID: process.env.TELEGRAM_COUNCIL_ID || "",
    TOPIC_MOBILE: process.env.TELEGRAM_TOPIC_MOBILE || "",
    TOPIC_FORUM: process.env.TELEGRAM_TOPIC_FORUM || "",
  },
  profile: "ci",
});

// Finalize the app
await app.finalize();
EOF

echo "📝 Created minimal worker-only deployment script"
echo ""

# Deploy with the minimal script
if bun run alchemy-worker-only.ts 2>&1; then
    echo ""
    echo "✅ Worker deployment completed successfully!"
    echo "✅ github-webhook worker deployed to stage: $STAGE"
else
    echo ""
    echo "❌ Worker deployment failed"
    echo "📝 This may be due to Cloudflare authentication or configuration"
    echo ""
    echo "🎯 Implementation Status:"
    echo "✅ All code files ready"
    echo "✅ Clean stage created"
    echo "✅ Worker-only script prepared"
    echo "⏳ Deployment needs troubleshooting"
fi

echo ""
echo "📊 Deployment Summary:"
echo "✅ Clean stage: $STAGE"
echo "✅ Worker-only script: alchemy-worker-only.ts"
echo "✅ Environment variables: Set"
echo "🎯 Ready for stage verification"
