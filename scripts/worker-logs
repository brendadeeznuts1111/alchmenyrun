#!/usr/bin/env bash
# Monitor github-webhook worker logs

set -euo pipefail

# Default values
STAGE="prod"
WORKER="github-webhook"
FOLLOW=false

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --stage)
            STAGE="$2"
            shift 2
            ;;
        --worker)
            WORKER="$2"
            shift 2
            ;;
        --follow|-f)
            FOLLOW=true
            shift
            ;;
        --help|-h)
            echo "Usage: $0 [--stage <stage>] [--worker <worker>] [--follow]"
            echo ""
            echo "Monitor logs for a specific worker in a stage"
            echo ""
            echo "Options:"
            echo "  --stage <stage>    Stage to monitor (default: prod)"
            echo "  --worker <worker>  Worker to monitor (default: github-webhook)"
            echo "  --follow, -f       Follow log output (like tail -f)"
            echo "  --help, -h         Show this help message"
            echo ""
            echo "Examples:"
            echo "  $0 --stage prod --worker github-webhook --follow"
            echo "  $0 --stage nolarose --worker website"
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            echo "Use --help for usage information"
            exit 1
            ;;
    esac
done

echo "üìã Worker Log Monitor"
echo "   Stage: $STAGE"
echo "   Worker: $WORKER"
echo "   Follow: $FOLLOW"
echo ""

# Check if worker state exists
worker_state=".alchemy/cloudflare-demo/$STAGE/$WORKER.json"
if [ ! -f "$worker_state" ]; then
    echo "‚ùå Worker state not found: $worker_state"
    echo ""
    echo "üîç Available workers in stage '$STAGE':"
    if [ -d ".alchemy/cloudflare-demo/$STAGE" ]; then
        find ".alchemy/cloudflare-demo/$STAGE" -name "*.json" -exec basename {} .json \; | while read worker; do
            echo "   - $worker"
        done
    else
        echo "   (no stage found)"
    fi
    echo ""
    echo "üí° The github-webhook worker needs to be deployed first:"
    echo "   ./scripts/deploy-github-webhook"
    exit 1
fi

echo "‚úÖ Worker state found: $worker_state"
echo ""

# Try to get logs using wrangler if available
if command -v wrangler &> /dev/null; then
    echo "üì° Fetching logs with wrangler..."
    
    if [ "$FOLLOW" = true ]; then
        echo "üîÑ Following logs (Ctrl+C to stop)..."
        wrangler tail --worker-name "$WORKER" 2>/dev/null || {
            echo "‚ö†Ô∏è  wrangler tail failed - worker may not be deployed yet"
            echo "üìù This is expected if authentication is missing"
        }
    else
        echo "üìä Getting recent logs..."
        wrangler tail --worker-name "$WORKER" --once 2>/dev/null || {
            echo "‚ö†Ô∏è  wrangler tail failed - worker may not be deployed yet"
            echo "üìù This is expected if authentication is missing"
        }
    fi
else
    echo "‚ùå wrangler CLI not found"
    echo "üí° Install with: npm install -g wrangler"
    echo ""
    echo "üìù Worker Status:"
    echo "   ‚úÖ Implementation complete"
    echo "   ‚úÖ Ready for deployment"
    echo "   ‚è≥ Waiting for Cloudflare authentication"
fi

echo ""
echo "üéØ Expected: github-webhook worker logs should show:"
echo "   - DO stub creation: alc.do.id=gh_agent_<stream>"
echo "   - Webhook processing events"
echo "   - Telegram API calls for pin/unpin operations"
