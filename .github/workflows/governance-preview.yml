name: Governance PR Preview

on:
  pull_request:
    types: [opened, reopened, synchronize, closed]
    paths:
      - 'docs/ALC-RFC-004-**'
      - 'src/**'
      - 'alchemy.run.ts'
      - '.github/workflows/governance-checks.yml'

# Ensure only one governance preview runs at a time per PR
concurrency:
  group: "governance-preview-${{ github.event.pull_request.number }}"
  cancel-in-progress: false

jobs:
  governance-preview:
    if: (github.event.action != 'closed' && github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build Application
        run: bun run build

      - name: Setup Cloudflare Environment
        run: |
          echo "Setting up governance preview environment..."
          # Use PR-specific stage for isolation
          echo "STAGE=pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
          echo "GOVERNANCE_PREVIEW=true" >> $GITHUB_ENV

      - name: Deploy Governance Preview
        run: |
          echo "🚀 Deploying governance preview for PR #${{ github.event.pull_request.number }}"

          # Create preview environment with governance features enabled
          bun run deploy --stage pr-${{ github.event.pull_request.number }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          GOVERNANCE_ENABLED: true
          AI_SERVICE_KEY: ${{ secrets.AI_SERVICE_KEY }}

      - name: Validate Governance Features
        run: |
          echo "🔍 Validating governance features in preview environment..."

          # Basic health check
          if curl -f -s "https://cloudflare-demo-website-pr-${{ github.event.pull_request.number }}.utahj4754.workers.dev/api/health" > /dev/null; then
            echo "✅ Preview environment deployed successfully"
          else
            echo "❌ Preview environment health check failed"
            exit 1
          fi

      - name: Comment Preview Status
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = `https://cloudflare-demo-website-pr-${{ github.event.pull_request.number }}.utahj4754.workers.dev`;
            const prNumber = ${{ github.event.pull_request.number }};

            const previewComment = `
            ## 🛡️ Governance Preview Deployed

            Your governance features have been deployed to a preview environment!

            **🌐 Preview URL:** ${previewUrl}
            **📋 PR:** #${prNumber}
            **🏗️ Stage:** pr-${prNumber}

            ### Governance Features Available:
            - 🔍 **Health Check**: ${previewUrl}/api/health
            - 📊 **Governance Dashboard**: ${previewUrl}/governance (when implemented)
            - 🎯 **API Endpoints**: ${previewUrl}/api/governance/* (when implemented)

            ### Testing Commands:
            \`\`\`bash
            # Test governance API (when available)
            curl "${previewUrl}/api/governance/status"

            # Check application health
            curl "${previewUrl}/api/health"
            \`\`\`

            _This preview will be automatically cleaned up when the PR is closed._
            `;

            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: previewComment
            });

  governance-cleanup:
    if: (github.event.action == 'closed' && github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build Application
        run: bun run build

      - name: Cleanup Governance Preview
        run: |
          echo "🧹 Cleaning up governance preview for PR #${{ github.event.pull_request.number }}"

          # Destroy the preview environment
          bun run destroy --stage pr-${{ github.event.pull_request.number }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
