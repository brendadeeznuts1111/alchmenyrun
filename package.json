{
  "name": "alchmenyrun",
  "version": "4.4.0",
  "description": "Modern Cloudflare Infrastructure with Alchemy",
  "type": "module",
  "scripts": {
    "alchemy:dev": "bun --watch ./alchemy.run.ts --dev",
    "dev": "bun run build:css && bun run alchemy:dev",
    "dev:clean": "pkill -f workerd || true && bun run dev",
    "deploy": "bun run build:css && bun ./alchemy.run.ts",
    "deploy:prod": "bun run build:css && bun ./alchemy.run.ts --stage prod",
    "deploy:read": "PHASE=read bun ./alchemy.run.ts",
    "scope:test": "PHASE=read bun ./alchemy.run.ts",
    "destroy": "PHASE=destroy bun ./alchemy.run.ts",
    "destroy:prod": "PHASE=destroy bun ./alchemy.run.ts --stage prod",
    "build": "bun run build:css && cd apps/demo-app && bun run build",
    "build:css": "tailwindcss -i ./src/frontend/index.css -o ./src/frontend/index.css --minify",
    "check": "bun tsc -b && bun run format:check",
    "format": "oxfmt '.' '!./node_modules/' '!./dist/'",
    "format:check": "bun run format -- --check",
    "test": "vitest run",
    "test:integration": "vitest run ./src/tests/integration.test.ts",
    "test:watch": "vitest",
    "test:ui": "vitest --ui",
    "test:webhook": "./scripts/test-github-webhook.sh",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "drizzle-kit migrate",
    "watch:alchemy": "npm view alchemy version --json | bun -e 'const v = await Bun.stdin.text(); const ver = JSON.parse(v); console.log(ver >= \"0.77.0\" ? \"üöÄ 0.77.0 is LIVE!\" : `Current: ${ver}`)'",
    "mcp:claude": "bun run packages/@alch/mcp-server/cli.ts",
    "kit:test": "bun test packages/@alch/*/src",
    "tunnel:test": "bun test packages/@alch/tunnel/src",
    "tunnel:build": "bun build packages/@alch/tunnel/src/index.ts --outdir dist/tunnel --target bun",
    "kit:build": "bun build packages/@alch/bun-runtime/src/index.ts --outdir dist/bun-runtime --target bun && bun build packages/@alch/mcp-server/src/index.ts --outdir dist/mcp-server --target bun",
    "kit:dev": "bun run mcp:claude & alchemy dev",
    "kit:new": "bun run packages/@alch/cli/bin/alchemy-kit.js generate",
    "app:new": "./scripts/create-app.sh",
    "feed:open": "echo 'Opening RSS feed: https://github.com/brendadeeznuts1111/alchmenyrun/releases.atom' && (open https://github.com/brendadeeznuts1111/alchmenyrun/releases.atom || xdg-open https://github.com/brendadeeznuts1111/alchmenyrun/releases.atom || echo 'Please open manually: https://github.com/brendadeeznuts1111/alchmenyrun/releases.atom')",
    "feed:check": "curl -s 'https://github.com/brendadeeznuts1111/alchmenyrun/releases.atom' | head -10",
    "feed:validate": "curl -s -I 'https://github.com/brendadeeznuts1111/alchmenyrun/releases.atom' | grep -E '(HTTP|content-type)'",
    "build:frontend": "PHASE=read bun ./scripts/build-frontend.ts",
    "monitor:collisions": "./scripts/monitor-collisions.sh",
    "notify:telegram": "./scripts/notify-telegram.sh",
    "telegram:rollback": "./scripts/telegram-rollback.sh",
    "telegram:replace-card": "./scripts/replace-card.sh",
    "telegram:unpin": "./scripts/unpin.sh",
    "telegram:cli": "./scripts/tgk",
    "telegram:enhanced": "python3 ./scripts/tgk-enhanced",
    "telegram:ecosystem:cloudflare": "./scripts/tgk-cf",
    "telegram:ecosystem:customer": "./scripts/tgk-customer",
    "telegram:ecosystem:webapp": "./scripts/tgk-webapp",
    "telegram:ai:remediate": "./infra/telegram/auto-remediate.sh",
    "version:patch": "bun run scripts/version-bump.ts patch",
    "version:minor": "bun run scripts/version-bump.ts minor",
    "version:major": "bun run scripts/version-bump.ts major",
    "version:canary": "bun run scripts/version-bump.ts canary",
    "version:release": "bun run scripts/version-release.ts",
    "release": "release-it",
    "release:canary": "release-it --preRelease=canary",
    "release:patch": "release-it patch",
    "release:minor": "release-it minor",
    "release:major": "release-it major",
    "release:ai-suggest": "tgk ai suggest release-type --git-log \"$(git log --pretty=format:'%s%n%b' HEAD~$(git rev-list --count \"$(git describe --tags --abbrev=0 2>/dev/null || echo 'HEAD~1')\"..HEAD 2>/dev/null || echo '1')..HEAD)\"",
    "release:changelog": "bunx @release-it/conventional-changelog --infile CHANGELOG.md --latest",
    "release:test": "echo 'üß™ RELEASE PIPELINE TEST' && echo '=======================' && echo '' && echo '1Ô∏è‚É£ AI Release Type Suggestion:' && bun run release:ai-suggest 2>/dev/null || echo '   (Requires tgk installation for full test)' && echo '' && echo '2Ô∏è‚É£ Version Bump Scripts:' && ls -la scripts/version-*.ts && echo '' && echo '3Ô∏è‚É£ Release-it Configuration:' && [ -f .release-it.json ] && echo '   ‚úÖ .release-it.json exists' || echo '   ‚ùå .release-it.json missing' && echo '' && echo '4Ô∏è‚É£ CHANGELOG:' && [ -f CHANGELOG.md ] && echo '   ‚úÖ CHANGELOG.md exists ('$(wc -l < CHANGELOG.md)' lines)' || echo '   ‚ùå CHANGELOG.md missing' && echo '' && echo '5Ô∏è‚É£ CI/CD Workflow:' && [ -f .github/workflows/release.yml ] && echo '   ‚úÖ Release workflow exists' || echo '   ‚ùå Release workflow missing' && echo '' && echo 'üéâ RELEASE PIPELINE READY FOR DEPLOYMENT!'"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "1.20.2",
    "alchemy": "^0.76.1",
    "drizzle-orm": "^0.29.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@cloudflare/workers-types": "^4.20241218.0",
    "@types/node": "24.9.1",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@vitest/ui": "^1.0.0",
    "autoprefixer": "10.4.21",
    "drizzle-kit": "^0.20.0",
    "miniflare": "4.20251011.1",
    "oxfmt": "^0.5.0",
    "postcss": "8.5.6",
    "release-it": "^19.0.0",
    "@release-it/conventional-changelog": "^10.0.0",
    "semver": "7.7.3",
    "tailwindcss": "3",
    "typescript": "^5.3.0",
    "vitest": "^1.0.0"
  }
}
